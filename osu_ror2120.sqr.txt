! ROR2120
! Satisfactory Academic Progress Report and Emails
!***********************************************************************
! Purpose:
!
! This program reports students who have received "bad" SAP codes in
! the parameter term code.  The file created is passed to FormFusion
! to send out emails to the students to inform them.
!
!***********************************************************************
! Parameters
!   p1 SAP Calculated Term
!   p2 Email Type
!
!***********************************************************************
! Modification History
! Who  When      What
! ---  --------- -------------------------------------------------------
! SLT  14-NOV-2012 New SQR.
! SLT  16-Jun-2015 Differences between WL-30,WL-45 and WL-60 have not 
!                  been reported, so main SQL was modified to include them.
!***********************************************************************
 
 
!|==========================================================================
!| Setup
!|==========================================================================
 
BEGIN-SETUP
   #include 'osu_includes.sqc'
   #define prog_name ROR2120
 
   #define TRUE 1
   #define FALSE 0
   #define SUCCESS 0
   #Define Test_Email_Address 'tanguays@onid.orst.edu'
   #Define MTF_Codes ('N-MTF')
 
END-SETUP

 
!|==========================================================================
!| Main Program
!|==========================================================================
 
BEGIN-PROGRAM

   DO initialization
   if #number_of_students > 0
      DO main
   end-if
   Do close_files
   
END-PROGRAM
 
!---------------------------------------------------------------------------
 
BEGIN-PROCEDURE initialization

   input $output_file 'Enter Output File '                  ! P0
   input $calc_term   'Enter SAP Calculated Term '          ! P1
   input $effect_term 'Enter SAP Effective Term '           ! P2
   input $sap_email   'Enter SAP Email Code     '           ! P3
   input $run_mode    'Enter run mode (A/U)     '           ! P4
   input $application 'Enter Popsel Application '           ! P5
   input $selection   'Enter Popsel Selection   '           ! P6
   input $creator     'Enter Popsel Creator     '           ! P7
   input $userid      'Enter Popsel User ID     '           ! P8
   
   Let $report_date = datetostr(datenow(),'DD-Mon-YYYY')
   Let $report_time = datetostr(datenow(),'HH24:MI')
   Let $survey_date = datetostr(datenow(),'DD-MON-YYYY')

   Let $sepchar = ','  ! Separator character (delimiter)
   LET $embedchar = '"'
   LET $apost = chr(39)
   LET $cr = chr(13)
   LET $lf = chr(10)
   LET $crlf = $cr||$lf
   
   LET $sap_email = upper($sap_email)
   LET $run_mode = upper($run_mode)
   LET $application = upper($application)
   LET $selection = upper($selection)
   LET $creator = upper($creator)
   LET $userid = upper($userid)
    
   LET #record_count = 0
   LET #records_updated = 0
   LET #records_inserted = 0
   
   do get_sap_email
   
   do get_count
   
   if #number_of_students > 0

      OPEN $output_file AS 51 for-writing RECORD=999999:vary STATUS=#file-status
      IF (#file-status != {SUCCESS})
         DISPLAY '*ERROR* opening ' noline
         DISPLAY $output_file
         DISPLAY 'Error status = ' noline
         DISPLAY #file-status 8888888
      END-IF
      
      WRITE 51 FROM -
        
         $embedchar   'Student Email'        $embedchar  $sepchar -
         $embedchar   'Student ID'           $embedchar  $sepchar -
         $embedchar   'Student First Name'   $embedchar  $sepchar -
         $embedchar   'Student Last Name'    $embedchar  $sepchar -
         $embedchar   'Level'                $embedchar  $sepchar -
         $embedchar   'DPP'                  $embedchar  $sepchar -
         $embedchar   'Prior Term'           $embedchar  $sepchar -
         $embedchar   'Prior SAP'            $embedchar  $sepchar -
         $embedchar   'Calculated Term'      $embedchar  $sepchar -
         $embedchar   'Calculated SAP'       $embedchar  $sepchar -
         $embedchar   'Effective Term'       $embedchar  $sepchar -
         $embedchar   'Effective SAP'        $embedchar  $sepchar -
         $embedchar   'PACE'                 $embedchar  $sepchar -
         $embedchar   'GPA'                  $embedchar  $sepchar -
         $embedchar   'MTF Allowed Hours'    $embedchar  $sepchar -
         $embedchar   'MTF Attempted Hours'  $embedchar  $sepchar -
         $embedchar   'MTF Remaining Hours'  $embedchar  $sepchar -
         $embedchar   'Reason'               $embedchar   
               STATUS=#file-status        
         IF (#file-status != {SUCCESS})   
            DISPLAY '*ERROR* writing data record to ' noline
            DISPLAY $output_file
            DISPLAY 'Error status = ' noline
            DISPLAY #file-status 8888888
         END-IF 
   end-if  

   DO GET_DATABASE_NAME ($db)
   Show 'running In DB ' $db 
   
   DO get_aid_year
   
END-PROCEDURE

!------------------------------------------------------------
 
BEGIN-PROCEDURE get_count

  LET #number_of_students = 0

BEGIN-SELECT DISTINCT ON-ERROR=error_handler ('get_count')
count(spriden_pidm)                     &number_of_students

   LET #number_of_students = &number_of_students

from spriden, rorsapr a, rorsapr b, rtvsapr 
where spriden_change_ind is null 
and a.rorsapr_pidm = spriden_pidm 
and b.rorsapr_pidm = spriden_pidm 
and b.rorsapr_sapr_code = rtvsapr_code
and b.rorsapr_term_code = $effect_term 
and (($sap_email = 'SAP_EXCEEDS_MTF' and b.rorsapr_sapr_code in {MTF_Codes})
     or($sap_email <> 'SAP_EXCEEDS_MTF' and  b.rorsapr_sapr_code like [$email_where]))
and (($sap_email <> 'SAP_FAILED_COND')
     or
     ($sap_email = 'SAP_FAILED_COND' and b.rorsapr_sapr_code not in {MTF_Codes} and a.rorsapr_sapr_code not like 'A-%'))
and (($sap_email <> 'SAP_FAILED_ACAD')
     or
     ($sap_email = 'SAP_FAILED_ACAD' and a.rorsapr_sapr_code like 'A-%'))
and a.rorsapr_term_code = (select max(rorsapr_term_code) 
                           from rorsapr 
                           where rorsapr_pidm = spriden_pidm 
                           and rorsapr_term_code < $effect_term) 
and (($application is null and $selection is null and $creator is null and $userid is null)
     or
     (spriden_pidm in (select glbextr_key
                       from glbextr
                       where glbextr_application = $application
                         and glbextr_selection = $selection
                         and glbextr_creator_id = $creator
                         and glbextr_user_id = $userid)))
END-SELECT

END-PROCEDURE

!------------------------------------------------------------
 
BEGIN-PROCEDURE main
BEGIN-SELECT DISTINCT ON-ERROR=error_handler ('main')
spriden_pidm                                                                 &pidm  
spriden_id                                                                   &sid 
spriden_last_name                                                            &lname 
spriden_first_name                                                           &fname
a.rorsapr_term_code                                                          &PREVIOUS_TERM  
a.rorsapr_sapr_code                                                          &PREVIOUS_SAP_CODE 
b.rorsapr_term_code                                                          &NEW_TERM  
b.rorsapr_sapr_code                                                          &NEW_SAP_CODE 
b.rorsapr_sapr_code_calc                                                     &CALCULATED_SAP 
trunc(BWYKR_SAP.F_GET_SAP_OVERALL_PERCENT_ALT(spriden_pidm ,$calc_term ),2)  &PACE 
BWYKR_SAP.F_GET_OSU_GPA(spriden_pidm ,$calc_term )                           &GPA 
BWYKR_SAP.F_GET_MAX_TIME_NEW(spriden_pidm ,$calc_term )                      &Allowed_hrs 
BWYKR_SAP.F_GET_SAP_ATTEMPTED_HOURS_ALT(spriden_pidm ,$calc_term )           &Attempted_Hrs 
BWYKR_SAP.F_GET_SAP_ATT_HOURS_CHANGED(spriden_pidm ,$calc_term )             &Attempted_hrs_since_last_SAP 
rtvsapr_desc                                                                 &reason

   let #record_count = #record_count + 1

   let #Allowed_hrs = &Allowed_hrs
   let #Attempted_Hrs = &Attempted_Hrs
   let #Remaining_hrs = #Allowed_hrs - #Attempted_Hrs 
   if #Remaining_hrs < 0
      LET #Remaining_hrs = 0
   end-if
   
   let $Allowed_hrs = edit(#Allowed_hrs,'999.9')
   let $Attempted_Hrs = edit(#Attempted_Hrs,'999.9')
   let $Remaining_hrs = edit(#Remaining_hrs,'999.9')

   let #pidm = &pidm 
   let $sap_code = &NEW_SAP_CODE
   if $sap_email = 'SAP_FAILED_ACAD'
      do get_ap_terms
   else
      do get_sap_description
   end-if
   
   do get_level
   do get_dpp
   do get_email_address
   
   WRITE 51 FROM -
     
      $embedchar   $email                 $embedchar  $sepchar -
      $embedchar   &sid                   $embedchar  $sepchar -
      $embedchar   &fname                 $embedchar  $sepchar -
      $embedchar   &lname                 $embedchar  $sepchar -
      $embedchar   $level                 $embedchar  $sepchar -
      $embedchar   $dpp_code              $embedchar  $sepchar -
      $embedchar   &PREVIOUS_TERM         $embedchar  $sepchar -
      $embedchar   &PREVIOUS_SAP_CODE     $embedchar  $sepchar -
      $embedchar   $calc_term             $embedchar  $sepchar -
      $embedchar   &CALCULATED_SAP        $embedchar  $sepchar -
      $embedchar   $effect_term           $embedchar  $sepchar -
      $embedchar   &NEW_SAP_CODE          $embedchar  $sepchar -
      $embedchar   &PACE                  $embedchar  $sepchar -
      $embedchar   &GPA                   $embedchar  $sepchar -
      $embedchar   $Allowed_hrs           $embedchar  $sepchar -
      $embedchar   $Attempted_Hrs         $embedchar  $sepchar -
      $embedchar   $Remaining_hrs         $embedchar  $sepchar -
      $embedchar   $sap_desc              $embedchar   
            STATUS=#file-status        
      IF (#file-status != {SUCCESS})   
         DISPLAY '*ERROR* writing data record to ' noline
         DISPLAY $output_file
         DISPLAY 'Error status = ' noline
         DISPLAY #file-status 8888888
      END-IF  
      
      if $run_mode = 'U'
         do insert_gurmail
      end-if 

from spriden, rorsapr a, rorsapr b, rtvsapr 
where spriden_change_ind is null 
and a.rorsapr_pidm = spriden_pidm 
and b.rorsapr_pidm = spriden_pidm 
and b.rorsapr_sapr_code = rtvsapr_code
!and a.rorsapr_term_code = $calc_term
and b.rorsapr_term_code = $effect_term 
and (($sap_email = 'SAP_EXCEEDS_MTF' and b.rorsapr_sapr_code in {MTF_Codes})
     or($sap_email <> 'SAP_EXCEEDS_MTF' and  b.rorsapr_sapr_code like [$email_where]))
and (($sap_email <> 'SAP_FAILED_COND')
     or
     ($sap_email = 'SAP_FAILED_COND' and b.rorsapr_sapr_code not in {MTF_Codes} and a.rorsapr_sapr_code not like 'A-%'))
and (($sap_email <> 'SAP_FAILED_ACAD')
     or
     ($sap_email = 'SAP_FAILED_ACAD' and a.rorsapr_sapr_code like 'A-%'))
and a.rorsapr_term_code = (select max(rorsapr_term_code) 
                           from rorsapr 
                           where rorsapr_pidm = spriden_pidm 
                           and rorsapr_term_code < $effect_term) 
and (($application is null and $selection is null and $creator is null and $userid is null)
     or
     (spriden_pidm in (select glbextr_key
                       from glbextr
                       where glbextr_application = $application
                         and glbextr_selection = $selection
                         and glbextr_creator_id = $creator
                         and glbextr_user_id = $userid)))
and a.rorsapr_sapr_code <> b.rorsapr_sapr_code
and ((substr(b.rorsapr_sapr_code,1,2) <> decode(a.rorsapr_sapr_code,
                                       'X','G-',
                                       'J','W-',
                                       'K','P-',
                                       'N','N-',
                                       'S','SU',
                                       'Z','SU',
                                       'L','LA',substr(a.rorsapr_sapr_code,1,2)))
    or (substr(b.rorsapr_sapr_code,1,2) = 'WL' and substr(a.rorsapr_sapr_code,1,2) = 'WL' 
         and b.rorsapr_sapr_code <> a.rorsapr_sapr_code))
order by spriden_last_name, spriden_first_name                         
END-SELECT

END-PROCEDURE

!---------------------------------------------------------------------------

BEGIN-PROCEDURE get_sap_email

   LET $email_where = '' 

   EVALUATE $sap_email
      WHEN = 'SAP_FAILED_ACAD'
         LET $email_where = $apost||'N-%'||$apost
         break
      WHEN = 'SAP_LAST'
         LET $email_where = $apost||'LAST'||$apost
         break
      WHEN = 'SAP_EXCEEDS_MTF'
         LET $email_where = $apost||'N-MTF'||$apost
         break
      WHEN = 'SAP_PROBATION'
         LET $email_where = $apost||'P-%'||$apost
         break
      WHEN = 'SAP_SUSPENDED'
         LET $email_where = $apost||'SUSP'||$apost
         break
      WHEN = 'SAP_WARN_MTF30'
         LET $email_where = $apost||'WL-30'||$apost
         break
      WHEN = 'SAP_WARN_MTF45'
         LET $email_where = $apost||'WL-45'||$apost
         break
      WHEN = 'SAP_WARN_MTF60'
         LET $email_where = $apost||'WL-60'||$apost
         break
      WHEN = 'SAP_WARNING'
         LET $email_where = $apost||'W-%'||$apost
         break  
      WHEN = 'SAP_FAILED_COND'
         LET $email_where = $apost||'N-%'||$apost
         break    
   END-EVALUATE
   
   display $email_where

END-PROCEDURE 

!---------------------------------------------------------------------------

BEGIN-PROCEDURE get_sap_description

   LET $sap_desc = '' 

   EVALUATE $sap_code
      WHEN = 'A-PGPA'
         LET $sap_desc = ' COMPLETION RATE (PACE) / GPA'
         break
      WHEN = 'A-PACE'
         LET $sap_desc = ' COMPLETION RATE (PACE)'
         break
      WHEN = 'A-P100'
         LET $sap_desc = ' COMPLETION RATE (PACE)'
         break
      WHEN = 'A-GPA'
         LET $sap_desc = ' GPA'
         break
      WHEN = 'W-A30'
         LET $sap_desc = 'COMPLETION RATE (PACE) / GPA'
         break
      WHEN = 'W-A45'
         LET $sap_desc = 'COMPLETION RATE (PACE) / GPA'
         break
      WHEN = 'W-A60'
         LET $sap_desc = 'COMPLETION RATE (PACE) / GPA'
         break
      WHEN = 'W-PGPA'
         LET $sap_desc = 'COMPLETION RATE (PACE) / GPA'
         break
      WHEN = 'W-P30'
         LET $sap_desc = 'COMPLETION RATE (PACE)'
         break
      WHEN = 'W-P45'
         LET $sap_desc = 'COMPLETION RATE (PACE)'
         break
      WHEN = 'W-P60'
         LET $sap_desc = 'COMPLETION RATE (PACE)'
         break
      WHEN = 'W-G30'
         LET $sap_desc = 'GPA'
         break
      WHEN = 'W-G45'
         LET $sap_desc = 'GPA'
         break
      WHEN = 'W-G60'
         LET $sap_desc = 'GPA'
         break
      WHEN = 'W-PACE'
         LET $sap_desc = 'COMPLETION RATE (PACE)'
         break
      WHEN = 'W-GPA'
         LET $sap_desc = 'GPA'
         break
      WHEN = 'P-A30'
         LET $sap_desc = 'COMPLETION RATE (PACE) / GPA'
         break
      WHEN = 'P-A45'
         LET $sap_desc = 'COMPLETION RATE (PACE) / GPA'
         break
      WHEN = 'P-A60'
         LET $sap_desc = 'COMPLETION RATE (PACE) / GPA'
         break
      WHEN = 'P-PGPA'
         LET $sap_desc = 'COMPLETION RATE (PACE) / GPA'
         break
      WHEN = 'P-P30'
         LET $sap_desc = 'COMPLETION RATE (PACE)'
         break
      WHEN = 'P-P45'
         LET $sap_desc = 'COMPLETION RATE (PACE)'
         break
      WHEN = 'P-P60'
         LET $sap_desc = 'COMPLETION RATE (PACE)'
         break
      WHEN = 'P-G30'
         LET $sap_desc = 'GPA'
         break
      WHEN = 'P-G45'
         LET $sap_desc = 'GPA'
         break
      WHEN = 'P-G60'
         LET $sap_desc = 'GPA'
         break
      WHEN = 'P-PACE'
         LET $sap_desc = 'COMPLETION RATE (PACE)'
         break
      WHEN = 'P-GPA'
         LET $sap_desc = 'GPA'
         break
      WHEN = 'N-ALL'
         LET $sap_desc = 'COMPLETION RATE (PACE) / GPA / MAX TIMEFRAME'
         break
      WHEN = 'N-PGPA'
         LET $sap_desc = 'COMPLETION RATE (PACE) / GPA'
         break
      WHEN = 'N-MP'
         LET $sap_desc = 'COMPLETION RATE (PACE) / MAX TIMEFRAME'
         break
      WHEN = 'N-MG'
         LET $sap_desc = 'GPA / MAX TIMEFRAME'
         break
      WHEN = 'N-PACE'
         LET $sap_desc = 'COMPLETION RATE (PACE)'
         break
      WHEN = 'N-GPA'
         LET $sap_desc = 'GPA'
         break 
      WHEN = 'N-MTF'
         LET $sap_desc = 'MAX TIMEFRAME'
         break 
      WHEN = 'WL-30'
         LET $sap_desc = 'MAX TIMEFRAME'
         break
      WHEN = 'WL-45'
         LET $sap_desc = 'MAX TIMEFRAME'
         break
      WHEN = 'WL-60'
         LET $sap_desc = 'MAX TIMEFRAME'
         break  
   END-EVALUATE

END-PROCEDURE 

!---------------------------------------------------------------------------

BEGIN-PROCEDURE get_ap_terms

   LET $sap_desc = '' 
   LET $sap_desc_ap = ''

BEGIN-SELECT ON-ERROR=error_handler ('get_ap_terms')
rorsapr_term_code            &ap_term_code
rorsapr_sapr_code            &ap_sap_code
rtvsapr_desc                 &ap_sap_desc
stvterm_desc                 &ap_term_desc

   do get_sap_description

   LET $sap_desc_ap = &ap_term_desc || $sap_desc || $crlf || ' ' || $sap_desc_ap
   
from rorsapr,rtvsapr,stvterm
where rorsapr_pidm = #pidm 
and rorsapr_sapr_code = rtvsapr_code
and rorsapr_term_code = stvterm_code
and rorsapr_term_code >= (select max(rorsapr_term_code)
                          from rorsapr
                          where rorsapr_pidm = #pidm
                          and rorsapr_lock_ind = 'Y'
                          and rorsapr_sapr_code like 'A-%')
order by rorsapr_term_code desc
END-SELECT

   LET $sap_desc = $sap_desc_ap
END-PROCEDURE 

!---------------------------------------------------------------------------

BEGIN-PROCEDURE get_aid_year

   LET $aid_year = ''
   
BEGIN-SELECT  ON-ERROR=error_handler ('get_aid_year')
STVTERM_FA_PROC_YR             &aid_year

   LET $aid_year = &aid_year

FROM STVTERM 
WHERE STVTERM_CODE = $effect_term

END-SELECT
END-PROCEDURE 

!---------------------------------------------------------------------------

BEGIN-PROCEDURE get_level

   LET $level = ''
   
BEGIN-SELECT  ON-ERROR=error_handler ('get_level')
SGVCCUR_LEVL_CODE               &sgbstdn_levl

   LET $level = &sgbstdn_levl

FROM SGBSTDN, SGVCCUR
WHERE SGBSTDN_PIDM = #pidm
AND  SGBSTDN_TERM_CODE_EFF = (SELECT MAX(SGBSTDN_TERM_CODE_EFF)
                               FROM SGBSTDN
                              WHERE SGBSTDN_PIDM = #pidm
                                AND SGBSTDN_STYP_CODE <> '4'
                                AND SGBSTDN_TERM_CODE_EFF <= $calc_term)
AND  SGVCCUR_STDN_ROWID = SGBSTDN.ROWID
AND  SGVCCUR_ORDER = 1
AND  SGVCCUR_PIDM = SGBSTDN_PIDM
END-SELECT
END-PROCEDURE 

!---------------------------------------------------------------------------
BEGIN-PROCEDURE get_dpp
    
  LET $dpp_code = ''
  LET #dpp_number = 0

BEGIN-SELECT  ON-ERROR=error_handler ('get_dpp')
SGRSATT_ATTS_CODE     &DPP_code

    LET #dpp_number = #dpp_number + 1
    if #dpp_number = 1
      LET $dpp_code = &DPP_code
    else
      LET $dpp_code = &DPP_code || '/' || $dpp_code
    end-if
    
FROM   SGRSATT
WHERE  SGRSATT_PIDM = #pidm
AND    SGRSATT_TERM_CODE_EFF = (SELECT MAX(SGRSATT_TERM_CODE_EFF)
                                FROM SGRSATT
                                WHERE SGRSATT_TERM_CODE_EFF <= $calc_term
                                AND SGRSATT_PIDM = #pidm)
AND    SGRSATT_ATTS_CODE LIKE 'DU%' 
AND    SGRSATT_ATTS_CODE NOT IN ('DU01','DU02','DU03','DU04','DU0R','DU0S','DU0X')
END-SELECT

END-PROCEDURE

!---------------------------------------------------------------------------
BEGIN-PROCEDURE get_email_address
   
   Let $email = ''

BEGIN-SELECT LOOPS=1 
goremal_email_address  &goremal_email_onid

   LET $email = &goremal_email_onid

FROM goremal
WHERE goremal_pidm = #pidm
AND   goremal_emal_code = 'ONID'
AND   goremal_status_ind = 'A'
ORDER BY decode(goremal_preferred_ind,'Y','0','1'), 
         to_char(goremal_activity_date, 'YYYYMMDD') desc
END-SELECT

!---------------------------------------------------------------------------
! If no ONID email address, get the FAFSA email address
!---------------------------------------------------------------------------
if isblank($email)
BEGIN-SELECT LOOPS=1 
RCRAPP4_EMAIL_ADDRESS  &rcrapp4_email

   LET $email = &rcrapp4_email

FROM rcrapp4,
     rcrapp1
WHERE rcrapp1_pidm = #pidm
  AND rcrapp1_infc_code='EDE'
  AND rcrapp1_curr_rec_ind='Y'
  AND rcrapp1_aidy_code < '5000'
  AND rcrapp4_aidy_code = rcrapp1_aidy_code
  AND rcrapp4_pidm = rcrapp1_pidm
  AND rcrapp4_infc_code = rcrapp1_infc_code
  AND rcrapp4_seq_no = rcrapp1_seq_no
  AND rcrapp4_email_address is not null
ORDER BY rcrapp1_aidy_code DESC
END-SELECT
end-if

!---------------------------------------------------------------------------
! If no FAFSA email address, get the STU email address
!---------------------------------------------------------------------------
if isblank($email)
BEGIN-SELECT LOOPS=1 
goremal_email_address  &goremal_email_stu

   LET $email = &goremal_email_stu

FROM goremal
WHERE goremal_pidm = #pidm
AND   goremal_emal_code = 'STU'
AND   goremal_status_ind = 'A'
ORDER BY decode(goremal_preferred_ind,'Y','0','1'), 
         to_char(goremal_activity_date, 'YYYYMMDD') desc
END-SELECT
end-if

   ! when running in Development environment send to developer email  
   if $db <> 'PROD'
      Show 'Changing email to test email address ' {Test_Email_Address}
      Show 'Prior address was ' $email 
      Let $email = {Test_Email_Address}
   end-if  
   
END-PROCEDURE

!---------------------------------------------------------------------------
BEGIN-PROCEDURE insert_gurmail

BEGIN-SQL  ON-ERROR=error_handler ('insert_gurmail')
INSERT INTO GURMAIL (
GURMAIL_PIDM, 
GURMAIL_SYSTEM_IND, 
GURMAIL_MODULE_CODE, 
GURMAIL_LETR_CODE,
GURMAIL_DATE_INIT, 
GURMAIL_DATE_PRINTED, 
GURMAIL_USER, 
GURMAIL_AIDY_CODE,
GURMAIL_ORIG_IND, 
GURMAIL_PUB_GEN, 
GURMAIL_ACTIVITY_DATE)
VALUES (
#pidm, 
'R', 
'R', 
$sap_email, 
sysdate, 
sysdate, 
'SAISPRD', 
$aid_year,
'S', 
'G', 
sysdate)
END-SQL
END-PROCEDURE

!------------------------------------------------------------
BEGIN-PROCEDURE close_files

  
   SHOW 'Number of students: ' #record_count
   PRINT '********************' (2,1)
   PRINT 'Calculated Term: '    (+2,1)
   PRINT $calc_term             (,+2) 
   PRINT 'Effective Term:  '    (+1,1)
   PRINT $effect_term           (,+2)
   PRINT 'SAP Email:       '    (+1,1)
   PRINT $sap_email             (,+2)
   if $run_mode <> 'U'
      PRINT '** AUDIT MODE **'  (+1,1)
   else
      PRINT '** UPDATE MODE **' (+1,1)
   end-if 
   PRINT 'Number of Students: ' (+1,1)
   PRINT #record_count          (,+2) edit 9999999

   if #number_of_students > 0      
   close 51 
      IF (#file-status != {SUCCESS})
         DISPLAY '*ERROR* closing ' noline
         DISPLAY $filename
         DISPLAY 'Error status = ' noline
         DISPLAY #file-status 8888888
         LET #return-status = 4
         STOP
      END-IF
   end-if


END-PROCEDURE
 
!---------------------------------------------------------------------------

!|==========================================================================
!| End of Report
!|==========================================================================
 
!---------------------------------------------------------------------------
 
BEGIN-PROCEDURE Error_Handler ($err_routine)
   IF #_sql-status <> 1    ! Unique constraint
      DISPLAY ''
      DISPLAY ''
      DISPLAY '*ERROR*  Procedure = ' noline
      DISPLAY $err_routine
      DISPLAY ''
      DISPLAY 'SQL Error #: ' noline
      DISPLAY #_sql-status 8888888
      DISPLAY $_sql-error
      DISPLAY ''
      LET #_return-status = 4
   END-IF
END-PROCEDURE
#include 'get_database_name.sqc'              ! get current db name
